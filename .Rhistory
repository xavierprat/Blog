legend("topright",legend=c("Free Energy@300K-5ns "),text.col=c("red"))
init = 10020 # discard the first 50000 steps (50 ps)
final = 1000020
freq = 2 # every 50 steps (5x10)
R = 1.985E-3
Temp = 300.0
thisDihed = dihed300_5ns$V2[seq(init,final,freq)]
dens = hist(thisDihed,breaks=120,xlim = c(-180,180),plot = FALSE)
dens$log = -R*Temp*log(dens$density)
plot(dens$mids, dens$log,type="l",col=c("red"),xlim=c(-180,180),ylim=c(1,10))
legend("topright",legend=c("300K - Every 50 steps - 50-5ns "),text.col=c("red"),title="Free Energy")
init = 10020 # discard the first 50000 steps (50 ps)
final = 1000020
freq = 2 # every 50 steps (5x10)
R = 1.985E-3
Temp = 300
thisDihed = dihed300_5ns$V2[seq(init,final,freq)]
dens = hist(thisDihed,breaks=120,xlim = c(-180,180),plot = FALSE)
dens$log = -R*Temp*log(dens$density)
plot(dens$mids, dens$log,type="l",col=c("red"),xlim=c(-180,180),main = "Free Energy - Ethane Rotation",xlab = "Dihedral",ylab = "G(kcal/mol)")
legend("topright",legend=c("300K - Every 50 steps - 50-5ns "),text.col=c("red"))
init = 600020 # discard the first 3ns (5x6E5)
final = 1000020
freq = 2 # every 10 steps (5x10)
R = 1.985E-3
Temp = 300
thisDihed = dihed300_5ns$V2[seq(init,final,freq)]
dens = hist(thisDihed,breaks=120,xlim = c(-180,180),plot = FALSE)
dens$log = -R*Temp*log(dens$density)
plot(dens$mids, dens$log,type="l",col=c("red"),xlim=c(-180,180),main = "Free Energy - Ethane Rotation",xlab = "Dihedral",ylab = "G(kcal/mol)")
legend("topright",legend=c("300K - Every 50 steps - 50-5ns "),text.col=c("red"))
plot(dens$mids, dens$log,type="l",col=c("red"),xlim=c(-180,180),ylim = c(2,7),main = "Free Energy - Ethane Rotation",xlab = "Dihedral",ylab = "G(kcal/mol)")
legend("topright",legend=c("300K - Every 50 steps - 50-5ns "),text.col=c("red"))
dens = hist(thisDihed,breaks=120,plot = FALSE)
init = 1
final = 1000020
freq = 1 # every 50 steps (5x10)
R = 1.985E-3
Temp = 300.0
thisDihed = dihed300_5ns$V2[seq(init,final,freq)]
dens = hist(thisDihed,breaks=120,plot = FALSE)
dens$log = -R*Temp*log(dens$density)
barr_all_f1_5ns_1 = toString(op(calcBarrier(dens,-180,-110)))
calcBarrier <- function(dens,init,endit){
#this function calculates the barrier in a dens$log array
#the dens array comes from the hist function, the log is calculated separately
#init is the first angle and endit is the last angle
firstindex = which.min( abs(dens$mids - init ) )
lastindex = which.min( abs(dens$mids - endit ) )
DE= max(dens$log[firstindex:lastindex]) - min(dens$log[firstindex:lastindex])
return(DE)
}
op = function(x, d=2) sprintf(paste0("%1.",d,"f"), x)
barr_all_f1_5ns_1 = toString(op(calcBarrier(dens,-180,-110)))
barr_all_f1_5ns_2 = toString(op(calcBarrier(dens,-70,10)))
barr_all_f1_5ns_3 = toString(op(calcBarrier(dens,50,130)))
barr_all_f1_5ns_1 = toString(op(calcBarrier(dens,-183,-110)))
barr_all_f1_1ns_1 = toString(op(calcBarrier(denshist600,-179.9,-110)))
knitr::opts_chunk$set(echo = FALSE)
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*a3.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a3files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*a4.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a4files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*ho.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
hofiles<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*oh.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
ohfiles<- c(sort(n,decreasing = TRUE),p)
sample = read.table(a3files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3files)))
oho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
for (i in 1:length(a3files)){
#print(a3files[i])
a3=read.table(a3files[i],header = FALSE)
a4=read.table(a4files[i],header = FALSE)
oh=read.table(ohfiles[i],header = FALSE)
ho=read.table(hofiles[i],header = FALSE)
colname = gsub(".a3.data","",a3files[i])
names(a3a4)[i] = colname
names(oho)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
oho[[colname]] = oh$V2-ho$V2
}
fe_2d = read.csv("2D/free_energy_filter9999",header = FALSE, sep = "\t")
fe_a3a4 = read.csv("../10ns/free_energy",header = FALSE, sep = "\t")
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
fe_a3a4 = read.csv("../10ns/free_energy",header = FALSE, sep = "\t")
nwindows = length(a3files)
nsteps = length(a3a4[[1]])
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*a3.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a3files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*a4.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a4files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*ho.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
hofiles<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*oh.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
ohfiles<- c(sort(n,decreasing = TRUE),p)
sample = read.table(a3files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3files)))
oho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
oh <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
ho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
for (i in 1:length(a3files)){
#print(a3files[i])
a3=read.table(a3files[i],header = FALSE)
a4=read.table(a4files[i],header = FALSE)
oh_d=read.table(ohfiles[i],header = FALSE)
ho_d=read.table(hofiles[i],header = FALSE)
colname = gsub(".a3.data","",a3files[i])
names(a3a4)[i] = colname
names(oho)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
oho[[colname]] = oh_d$V2-ho_d$V2
ho[[colname]] = ho_d$V2
oh[[colname]] = oh_d$V2
}
fe_a3a4 = read.csv("/Users/xavier/Gd/Research/Chile/Camilo/10ns/free_energy",header = FALSE, sep = "\t")
fe_2d = read.csv("2D/free_energy_filter9999",header = FALSE, sep = "\t")
par(mfrow=c(3,3),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
for (i in 1:length(ohfiles)){
#I'm using ohfiles just for naming and finding windows
colname = gsub(".oh.data","",ohfiles[i])
#only show y-axis numbers on the first graph of the row
#print(colname)
if ( (i+2)%%3 == 0){
plot(oh[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n')
}else{
plot(oh[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n',yaxt='n')
}
rcValue = gsub("eqq_","",colname)
graphTitle = paste(rcValue,"O--H. Avg=",round(mean(oh[[colname]]),digits = 2),sep = "")
if (i < 10){
title(graphTitle,line=-2)
}else{
title(graphTitle,line=-6)
}
}
par(mfrow=c(3,3),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
for (i in 1:length(hofiles)){
#I'm using ohfiles just for naming and finding windows
colname = gsub(".oh.data","",hofiles[i])
#only show y-axis numbers on the first graph of the row
#print(colname)
if ( (i+2)%%3 == 0){
plot(ho[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n')
}else{
plot(ho[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n',yaxt='n')
}
rcValue = gsub("eqq_","",colname)
graphTitle = paste(rcValue,"H--O. Avg=",round(mean(ho[[colname]]),digits = 2),sep = "")
if (i < 10){
title(graphTitle,line=-2)
}else{
title(graphTitle,line=-6)
}
}
View(ho)
View(oh)
View(oho)
length(sample$V2)
length(hofiles)
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*a3.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a3files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*a4.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a4files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*ho.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
hofiles<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*oh.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
ohfiles<- c(sort(n,decreasing = TRUE),p)
sample = read.table(a3files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3files)))
oho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
oh <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
ho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
for (i in 1:length(a3files)){
#print(a3files[i])
a3=read.table(a3files[i],header = FALSE)
a4=read.table(a4files[i],header = FALSE)
oh_d=read.table(ohfiles[i],header = FALSE)
ho_d=read.table(hofiles[i],header = FALSE)
colname = gsub(".a3.data","",a3files[i])
names(a3a4)[i] = colname
names(oho)[i] = colname
names(ho)[i] = colname
names(oh)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
oho[[colname]] = oh_d$V2-ho_d$V2
ho[[colname]] = ho_d$V2
oh[[colname]] = oh_d$V2
}
fe_a3a4 = read.csv("/Users/xavier/Gd/Research/Chile/Camilo/10ns/free_energy",header = FALSE, sep = "\t")
fe_2d = read.csv("2D/free_energy_filter9999",header = FALSE, sep = "\t")
par(mfrow=c(3,3),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
for (i in 1:length(ohfiles)){
#I'm using ohfiles just for naming and finding windows
colname = gsub(".oh.data","",ohfiles[i])
#only show y-axis numbers on the first graph of the row
#print(colname)
if ( (i+2)%%3 == 0){
plot(a3a4[[colname]],ylim=c(-2.0,2.0),type="l",col="red",ann = FALSE,xaxt='n')
}else{
plot(a3a4[[colname]],ylim=c(-2.0,2.0),type="l",col="red",ann = FALSE,xaxt='n',yaxt='n')
}
graphTitle = paste(colname,". Avg=",round(mean(a3a4[[colname]]),digits = 2),sep = "")
if (i < 10){
title(graphTitle,line=-2)
}else{
title(graphTitle,line=-6)
}
}
par(mfrow=c(3,3),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
for (i in 1:length(ohfiles)){
#I'm using ohfiles just for naming and finding windows
colname = gsub(".oh.data","",ohfiles[i])
#only show y-axis numbers on the first graph of the row
#print(colname)
if ( (i+2)%%3 == 0){
plot(oh[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n')
}else{
plot(oh[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n',yaxt='n')
}
rcValue = gsub("eqq_","",colname)
graphTitle = paste(rcValue,"O--H. Avg=",round(mean(oh[[colname]]),digits = 2),sep = "")
if (i < 10){
title(graphTitle,line=-2)
}else{
title(graphTitle,line=-6)
}
}
par(mfrow=c(3,3),
oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
for (i in 1:length(hofiles)){
#I'm using ohfiles just for naming and finding windows
colname = gsub(".ho.data","",hofiles[i])
#only show y-axis numbers on the first graph of the row
#print(colname)
if ( (i+2)%%3 == 0){
plot(ho[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n')
}else{
plot(ho[[colname]],ylim=c(0.0,3.0),type="l",col="red",ann = FALSE,xaxt='n',yaxt='n')
}
rcValue = gsub("eqq_","",colname)
graphTitle = paste(rcValue,"H--O. Avg=",round(mean(ho[[colname]]),digits = 2),sep = "")
if (i < 10){
title(graphTitle,line=-2)
}else{
title(graphTitle,line=-6)
}
}
knitr::opts_chunk$set(echo = FALSE)
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*a3.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a3files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*a4.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
a4files<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*ho.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
hofiles<- c(sort(n,decreasing = TRUE),p)
tempo = Sys.glob("eqq*oh.data")
n<-tempo[grepl("n",tempo)]
p<-tempo[grepl("p",tempo)]
ohfiles<- c(sort(n,decreasing = TRUE),p)
sample = read.table(a3files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3files)))
oho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
oh <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
ho <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(hofiles)))
for (i in 1:length(a3files)){
#print(a3files[i])
a3=read.table(a3files[i],header = FALSE)
a4=read.table(a4files[i],header = FALSE)
oh_d=read.table(ohfiles[i],header = FALSE)
ho_d=read.table(hofiles[i],header = FALSE)
colname = gsub(".a3.data","",a3files[i])
names(a3a4)[i] = colname
names(oho)[i] = colname
names(ho)[i] = colname
names(oh)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
oho[[colname]] = oh_d$V2-ho_d$V2
ho[[colname]] = ho_d$V2
oh[[colname]] = oh_d$V2
}
fe_a3a4 = read.csv("/Users/xavier/Gd/Research/Chile/Camilo/10ns/free_energy",header = FALSE, sep = "\t")
fe_2d = read.csv("2D/free_energy_filter9999",header = FALSE, sep = "\t")
plot(fe_a3a4$V1,fe_a3a4$V2)
View(fe_a3a4)
View(fe_2d)
?title
knitr::opts_chunk$set(echo = FALSE)
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*a3.data")
tempo = Sys.glob("eqq*.data")
tempo
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*.data")
tempo
o1477h_files = tempo[grepl("477o1"),tempo]
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
tempo = Sys.glob("eqq*.data")
o1477h_files = tempo[grepl("477o1",tempo)]
o1477h_files
o1477h_files
o1477h_files = tempo[grepl("477o1",tempo)]
n = o1477h_files[grepl("n",o1477h_files)]
p = o1477h_files[grepl("n",o1477h_files)]
o1477h_files = c(sort(n,decreasing = TRUE),p)
o1477h_files
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
getFiles <- function(pattern){
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
o1477h_files = getFiles("477o1_h")
o2477h_files = getFiles("477o2_h")
o1477h_files
a3_files = getFiles("a3")
a3_files
getFiles <- function(pattern){
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
a3_files
a3_files = getFiles("a3")
a3_files
getFiles <- function(pattern){
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
oa477h_files = getFiles("477o1_h")
ob477h_files = getFiles("477o2_h")
oa515h_files = getFiles("515o1_h")
ob515h_files = getFiles("515o2_h")
o3h_files = getFiles("h_o3")
a3_files = getFiles("a3")
a4_files = getFiles("a4")
sample = read.table(a3files[1],header = FALSE)
sample = read.table(a3_files[1],header = FALSE)
getFiles <- function(pattern){
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
a3_files = getFiles("a3")
a4_files = getFiles("a4")
sample = read.table(a3_files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3files)))
getFiles <- function(pattern){
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
a3_files = getFiles("a3")
a4_files = getFiles("a4")
sample = read.table(a3_files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3_files)))
View(a3a4)
View(sample)
for (i in 1:length(a3_files)){
#print(a3files[i])
a3=read.table(a3_files[i],header = FALSE)
a4=read.table(a4_files[i],header = FALSE)
colname = gsub(".a3.data","",a3files[i])
names(a3a4)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
}
getFiles <- function(pattern){
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
a3_files = getFiles("a3")
a4_files = getFiles("a4")
sample = read.table(a3_files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3_files)))
for (i in 1:length(a3_files)){
#print(a3files[i])
a3=read.table(a3_files[i],header = FALSE)
a4=read.table(a4_files[i],header = FALSE)
colname = gsub(".a3.data","",a3files[i])
names(a3a4)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
}
getFiles <- function(pattern){
setwd("/Users/xavier/Gd/Research/Chile/Camilo/analysis_dist/")
listOfFiles = Sys.glob("eqq*.data")
listOfFiles = listOfFiles[grepl(pattern,listOfFiles)]
n = listOfFiles[grepl("n",listOfFiles)]
p = listOfFiles[grepl("p",listOfFiles)]
listOfFiles = c(sort(n,decreasing = TRUE),p)
return(listOfFiles)
}
a3_files = getFiles("a3")
a4_files = getFiles("a4")
sample = read.table(a3_files[1],header = FALSE)
#Build a dataframe with all the windows
a3a4 <- data.frame(matrix(NA,nrow = length(sample$V2), ncol = length(a3_files)))
for (i in 1:length(a3_files)){
#print(a3files[i])
a3=read.table(a3_files[i],header = FALSE)
a4=read.table(a4_files[i],header = FALSE)
colname = gsub(".a3.data","",a3_files[i])
names(a3a4)[i] = colname
a3a4[[colname]] = a3$V2-a4$V2
}
View(a3a4)
a3a4[[colname]] = a3$V2-a4$V2
?cut
?cut
?cut
library(psych)
knitr::opts_chunk$set(echo = FALSE)
library(psych)
knitr::opts_chunk$set(echo = FALSE)
setwd("~/Gd/Teaching/Chemistry_Curriculum/CHEM4/S20/Analysis")
compileM1 = read.csv("compileM1.csv",header = TRUE)
compileM2 = read.csv("compileM2.csv",header = TRUE)
hist(compileM1$quizScore,breaks=14, main = "Milestone 1. Grade", xlab = "Score", ylab = "Number of
")"
"
hist(compileM1$quizScore,breaks=14, main = "Milestone 1. Grade", xlab = "Score", ylab = "Number of students")
hist(compileM2$quizScore,breaks=14, main = "Milestone 2. Grade", xlab = "Score", ylab = "Number of students")
plot(compileM1$highestScorePract,compileM1$quizScore,xlim = c(0,100),ylim = c(0,100),main = "Milestone 1. Practicing score",xlab = "Highest score in practice quiz",ylab = "Score in Milestone 1")
lines(x = c(0,100), y = c(0,100))
plot(compileM2$highestScorePract,compileM2$quizScore,xlim = c(0,100),ylim = c(0,100),main = "Milestone 2. Practicing score",xlab = "Highest score in practice quiz",ylab = "Score in Milestone 2")
lines(x = c(0,100), y = c(0,100))
plot(compileM1$numbAttempt,compileM1$quizScore,ylim = c(0,100),main = "Milestone 1. #Attempts",
xlab = "Number of attempts in practice quiz",ylab = "Score in Milestone 1")
plot(compileM2$numbAttempt,compileM2$quizScore,ylim = c(0,100),main = "Milestone 2. #Attempts",
xlab = "Number of attempts in practice quiz",ylab = "Score in Milestone 2")
abline(a=20,b=6.15)
plot(compileM1$timeDiff,compileM1$quizScore,ylim = c(0,100),main = "Milestone 1. Early practice",
xlab = "Minutes before quiz time you started practicing",ylab = "Score in Milestone 1")
plot(compileM1$TotalMissed,compileM1$quizScore,ylim = c(0,100),main = "Milestone 1. Missed videos",
xlab = "Number of videos NOT watched",ylab = "Score in Milestone 1")
lines(x = c(40,0), y = c(0,100))
plot(compileM1$TotalWatched,compileM1$quizScore,ylim = c(0,100),main = "Milestone 1. Minutes of videos watched",
xlab = "Total number of minutes of videos watched",ylab = "Score in Milestone 1")
abline(a=0,b=0.25)
